{"version":3,"file":"5.01879c633e60ecd426ef.hot-update.js","sources":["webpack:///pages/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport \"../global.css\";\nimport f from \"fib\";\n\nimport Coffee from \"../components/coffee\";\n// import { Helmet } from \"react-helmet\";\n\n// TODO: Clean up array of cards\n// TODO: Use map to create cards\n\nconst Fib = ({ number, color, onClick }) => (\n  <Card color={color} onClick={() => onClick(f(number))}>\n    {f(number)}\n  </Card>\n);\n\n// const fib = Array().fill(12);\n\nconst N = 12;\nconst fib = Array.apply(null, { length: N })\n  .map(Number.call, Number)\n  .map(n => f(n))\n  .map(fn => ({ value: fn, display: fn }));\nconsole.log(fib);\n\nconst data = [\n  {\n    value: 0,\n    display: 0\n  },\n  ...fib,\n  {\n    value: \"?\",\n    display: \"?\"\n  },\n  {\n    value: \"∞\",\n    display: \"∞\"\n  },\n  {\n    value: \"Defer\",\n    display: \"➳\"\n  },\n  {\n    value: \"Coffee\",\n    display: (\n      <Coffee\n        style={{ margin: \"-5px 0 -5px\", display: \"inline-block\" }}\n        alt=\"coffee pot\"\n      />\n    )\n  }\n];\n\n// const Head = ({ color }) => (\n//   <Helmet>\n//     {(color === \"#FFBA00\" || color === null) && (\n//       <meta name=\"theme-color\" content=\"#FFBA00\" />\n//     )}\n//     {color === \"#00B6F0\" && <meta name=\"theme-color\" content=\"#00B6F0\" />}\n//     {color === \"#E05557\" && <meta name=\"theme-color\" content=\"#E05557\" />}\n//   </Helmet>\n// );\n\nconst Card = styled.div`\n  display: inline-block;\n  color: white;\n  margin-left: 8px;\n  margin-right: 8px;\n  border-radius: 4px;\n  padding: 40px 8px;\n  background: ${props => props.color};\n  text-align: center;\n  font-size: 32px;\n  cursor: pointer;\n  font-weight: 300;\n  line-height: 1;\n  width: 84px;\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.035), 0 4px 8px rgba(0, 0, 0, 0.07);\n`;\n\nconst Tray = styled.div`\n  display: block;\n  position: fixed;\n  white-space: nowrap;\n  overflow-x: auto;\n  background: #063651;\n  padding: 16px;\n  left: 0;\n  right: 0;\n  -webkit-overflow-scrolling: touch;\n  -ms-overflow-style: -ms-autohiding-scrollbar;\n`;\n\nconst ChevronContainer = styled.div`\n  display: block;\n  cursor: pointer;\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  padding: 8px;\n  text-align: right;\n`;\n\nconst OpenClose = ({ open, onClick }) => (\n  <ChevronContainer onClick={onClick}>\n    <img\n      src={\n        open\n          ? \"https://icon.now.sh/chevronDown/CCC\"\n          : \"https://icon.now.sh/chevronUp/CCC\"\n      }\n      alt=\"down icon\"\n    />\n  </ChevronContainer>\n);\n\nconst Container = styled.div`\n  font-family: \"Hind\", sans-serif;\n  height: 100%;\n`;\n\nconst colors = [\"#E05557\", \"#FFBA00\", \"#00B6F0\"];\n\nconst Stage = styled.div`\n  color: ${props => props.color};\n  margin: auto;\n  font-weight: 600;\n  font-size: ${props =>\n    props.display === \"Coffee\" || props.display === \"Defer\" ? \"5rem\" : \"12rem\"};\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  background: #092e41;\n  position: relative;\n  align-items: center;\n  height: ${props => (!props.open ? \"100%\" : \"calc(100% - 144px)\")};\n`;\n\nconst Intro = styled.p`\n  margin: auto;\n  opacity: 0.5;\n  color: white;\n`;\n\nexport default class extends Component {\n  state = {\n    display: null,\n    open: true,\n    color: \"white\"\n  };\n\n  update = n => this.setState({ display: n });\n\n  render() {\n    const { display, color, open } = this.state;\n    return (\n      <Container>\n        <Wrapper open={open}>\n          {display === null ? (\n            <Intro>Tap a Card Below</Intro>\n          ) : (\n            <Stage color={color} display={display}>\n              {display}\n            </Stage>\n          )}\n          <OpenClose\n            open={open}\n            onClick={() => this.setState({ open: !open })}\n          />\n        </Wrapper>\n        {open && (\n          <Tray>\n            {data.map((d, idx) => (\n              <Card key={idx} color=\"teal\" onClick={() => this.update(d.value)}>\n                {d.display}\n              </Card>\n            ))}\n          </Tray>\n        )}\n      </Container>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// pages/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAFA;AAMA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAHA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAUA;AAaA;AACA;AAUA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAKA;AANA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAYA;AAKA;AAEA;AACA;AAAA;AAGA;AAAA;AAIA;AAKA;AAAA;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;AAMA;AACA;AACA;AACA;AAHA;;;;;AAMA;AAAA;AAAA;AAAA;AAAA;;;;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AASA;;;;AArCA;AACA;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}